箱子排序 把分数相同的节点放在同一个箱子里。
//用于箱子排序的链表元素
struct srcd {
	int score;
	string* name;
	int operator != (const srcd& x) const {
		return score != x.score;
	}
	ostream& operator<<(ostream& out, const srcd& x) {
		out<<x.score<<" "<<*x.name<<endl; return out;
	}
}; 
void bsor(L_nodee<srcd>& list, int range)  {
	L_node<srcd>* bin;
	bin = new L_node<srcd> [range + 1];
	int len = list.size();
	for (int i = 1; i <= len; i++) {
		srcd x = list.get(0);
		list.erase(0);
		bin[x.score].insert(0, x);
	}
	//从箱子里收集元素
	for (int j = range; j >= 0; j--)  {
		while (!bin[j].empty()) {
			srcd x = bin[j].get(0);
			bin[j].erase(0);
			list.insert(0, x);
		}
	}
	delete []bin;
}