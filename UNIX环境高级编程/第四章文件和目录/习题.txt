4.1 用stat函数替换图4-3程序中的1stat函数，如若命令行参数之一是符号链接，会发生什么变化？
4.2 如果文件模式创建屏蔽字是777（八进制），结果会怎样？用shell的umask命令验证该结果。
4.3 关闭一个你所拥有文件的用户读权限，将导致拒绝你访问自已的文件，对此进行验证。
4.4 创建文件foo和bar后，运行图4-9的程序，将发生什么情况？
4.5 4.12节中讲到一个普通文件的大小可以为0，同时我们又知道st_size字段是为目录或符号链接定义的，那么目录和符号链接的长度是否可以为0？
4.6 编写一个类似cp(1)的程序，它复制包含空洞的文件，但不将字节0写到输出文件中去。
4.7 在4.12节1s命令的输出中，core和core.copy的访问权限不同，如果创建两个文件时umask没有变，说明为什么会发生这种差别。
4.8 在运行图4-16的程序时，使用了df(1)命令来检查空闲的磁盘空间。为什么不使用du（1)命令？
4.9 图4-20中显示unlink函数会修改文件状态更改时间，这是怎样发生的？
4.10 4.22节中，系统对可打开文件数的限制对myftw函数会产生什么影响？
4.11 在4.22节中的myftw从不改变其目录，对这种处理方法进行改动：每次遇到一个目录就用其调用chdir，这样每次调用1stat时就可以使用文件名而非路径名，处理完所有的目录
项后执行chdir(".,")。比较这种版本的程序和书中程序的运行时间。
4.12 每个进程都有一个根目录用于解析绝对路径名，可以通过chroot函数改变根目录。在手册中查阅此函数。说明这个函数什么时候有用。
4.13 如何只设置两个时间值中的一个来使用utimes函数？
4.14 有些版本的finger(1)命令输出“Newmail received...”和“unread since...”，其中...表示相应的日期和时间。程序是如何决定这些日期和时间的？
4.15 用cpio(1)和tar(1)命令检查档案文件的格式（请参阅《UNIX程序员手册》第5部分中的说明）。3个可能的时间值中哪几个是为每一个文件保存的？你认为文件复原时，文件的访问时间是什么？为什么？
4.16 UNIX系统对目录树的深度有限制吗？编写一个程序循环，在每次循环中，创建目录，并将该目录更改为工作目录。确保叶节点的绝对路径名的长度大于系统的PATH_MAX限制。可以调用getcwd得到目录的路径名吗？标准UNIX系统工具是如何处理长路径名的？对目录可以使用tar或cpio命令归档吗？
4.17 3.16节中描述了/dev/fd特征。如果每个用户都可以访问这些文件，则其访问权限必须为rw-rw-rw-。有些程序创建输出文件时，先删除该文件以确保该文件名不存在，忽略返回码。
unlink(path):
if ((fd=creat(path,FILE_MODE)) < 0)
err_sys(...);
如果path是/dev/fd/1，会出现什么情况？