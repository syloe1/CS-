11.1 修改图11-4所示的实例代码，正确地在两个线程之间传递结构。
11.2 在图11-14所示的实例代码中，需要另外添加什么同步（如果需要的话）可以使得主线程改变与挂起作业关联的线程ID？这会对jobremove函数产生什么影响？
11.3 把图11-15中的技术运用到工作线程实例（图11-1和图11-14）中实现工作线程函数。不要忘记更新queue_init函数对条件变量进行初始化，修改job_insert和job_append函数给工作线程发信号。会出现什么样的困难？
11.4 下面哪个步骤序列是正确的？
    （1）对互斥量加锁（pthread_mutex_lock）。
    （2）改变互斥量保护的条件。
    （3）给等待条件的线程发信号（pthread_cond_broadcast）。
    （4）对互斥量解锁（pthread_mutex_unlock）。
    或者
    （1）对互斥量加锁（pthread_mutex_lock）。
    （2）改变互斥量保护的条件。
    （3）对互斥量解锁（pthread_mutex_unlock）。
    （4）给等待条件的线程发信号（pthread_cond_broadcast）。
11.5 实现屏障需要什么同步原语？给出pthread_barrier_wait函数的一个实现。