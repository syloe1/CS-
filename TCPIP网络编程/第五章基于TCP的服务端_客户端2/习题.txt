(1)请说明TCP套接字连接设置的三次握手过程。尤其居3次数据交换过程每次收发的数据
内容
	客户端发送SYN报文：

	数据包格式：[SYN, seq = x]
	客户端随机生成一个初始序列号x，并将SYN标志位置1，发送给服务器。
	服务器回应SYN-ACK报文：

	数据包格式：[SYN, seq = y, ACK, ack = x + 1]
	服务器生成一个自己的初始序列号y，将SYN和ACK标志位置1，ack设置为客户端序列号x加1。
	客户端回应ACK报文：

	数据包格式：[ACK, seq = x + 1, ack = y + 1]
	客户端将ACK标志位置1，ack设置为服务器序列号y加1，并将自己的序列号增加1。
	通过这种方式，TCP保证了双方的序列号和确认号是同步的，确保了后续数据传输的可靠性和顺序性。
(2）TCP是可靠的数据传输协议，但在通过网络通信的过程中可能丢失数据。请通过ACK和
SEQ说名TCP通过何种机制保证丢失数据的可章传输。

		序列号（Sequence Number, SEQ）
	定义：每个TCP报文段都包含一个序列号，这个序列号标识了该报文段中数据的第一个字节在整个数据流中的位置。
	作用：通过序列号，接收方可以检测出数据报文的顺序是否正确，以及是否有丢失的报文。
	确认号（Acknowledgment Number, ACK）
	定义：每个TCP报文段中还包含一个确认号，指示接收方期望下一个收到的字节的序列号。
	作用：确认号告诉发送方哪些数据已经被成功接收，以及哪些数据需要重传。
	确保可靠性的机制
	确认机制（Acknowledgment Mechanism）：

	发送方发送数据后，启动一个定时器并等待接收方的确认（ACK）。
	接收方在成功接收到数据后，发送一个包含确认号的ACK报文给发送方。这个确认号是下一个期望收到的字节的序列号。
	如果发送方在定时器超时之前没有收到ACK，它会认为这个数据报文可能丢失并重传该数据。
	重传机制（Retransmission Mechanism）：

	如果发送方在超时之前没有收到确认，它会重传相应的数据报文。
	发送方会继续重传数据，直到接收到确认或达到预设的重传次数。
	累计确认（Cumulative Acknowledgment）：

	接收方可以发送一个累计确认号，确认它已经收到并处理了所有序列号小于该确认号的数据。
	例如，如果接收方收到带有序列号1000-1099的报文段后，它会发送ACK=1100，表示它已经收到并处理了序列号1000到1099的所有数据。
	快速重传（Fast Retransmit）：

	如果接收方检测到数据丢失（例如，序列号不连续），它会立即发送重复的ACK报文。
	当发送方连续收到三个重复的ACK（即同一个确认号重复三次），它会立即重传丢失的报文，而不必等待定时器超时。
	滑动窗口（Sliding Window）：

	TCP使用滑动窗口机制来控制数据流的发送和确认。
	发送方可以发送一定范围内的数据（窗口大小），在收到确认后窗口滑动，允许发送更多数据。
	这个机制确保了数据的连续性和流量控制。

(3）在TCP套接字中，调用write（或send）和read（或recv）函数时，数据在应用程序缓冲区、内核缓冲区和网络之间的移动涉及I/O缓冲区的使用。以下是详细说明：
	应用程序缓冲区到内核缓冲区：

		当应用程序调用write或send函数时，数据首先从应用程序的用户空间缓冲区复制到操作系统内核空间的发送缓冲区（Send Buffer）。
		应用程序调用write后，会返回成功写入到内核缓冲区的字节数。
			write(sockfd, buffer, len);
		内核缓冲区到网络：

		内核将发送缓冲区中的数据根据TCP协议打包成报文段（Segments），并通过网络接口发送到目标主机。
		发送缓冲区大小可以通过套接字选项进行配置（例如使用setsockopt函数）。
		网络传输：

		数据报文段通过网络传输到接收方。TCP协议负责确保数据的正确传输，包括重传丢失的数据、处理乱序数据和校验数据完整性。
		网络到内核缓冲区：

		接收方的内核从网络接口接收TCP报文段，并将其存储在内核空间的接收缓冲区（Receive Buffer）。
		内核TCP层会处理这些报文段，确保数据的顺序和完整性。
		内核缓冲区到应用程序缓冲区：

		当应用程序调用read或recv函数时，数据从内核的接收缓冲区复制到应用程序的用户空间缓冲区。
		lua
		复制代码
		read(sockfd, buffer, len);
		在这个调用中，内核接收缓冲区中的数据被复制到buffer中。

(4）对方主机的输入缓冲剩余50字节空间时，若本方主机通过write函数请求传输70字节，谱
问TCP如何处理这种情况？


		部分传输：

		发送方会根据接收方的窗口大小，发送最多50字节的数据。
		剩余的20字节数据会被保留在发送方的发送缓冲区中，等待接收方的接收窗口扩大后再发送。
		接收方处理：

		接收方收到数据后，会处理并从其接收缓冲区中移除数据，腾出空间。
		接收方随后发送一个包含新的窗口大小的ACK报文给发送方，通知其当前缓冲区的剩余空间。
		继续传输：

		发送方收到ACK报文后，更新接收方的窗口大小信息。
		如果窗口大小足够，发送方会继续传输剩余的20字节数据。
		这个过程会持续进行，直到所有数据都被成功传输。
(6)创建收发文件的服务器端/客户端，实现顺序如下
			客户端接受用户输人的传输文件名
			客户端请求服务器端传输该文件名所指文件
			如果指定文件存在，服务器编就将其发达给客户端；反之，则断开连接。
