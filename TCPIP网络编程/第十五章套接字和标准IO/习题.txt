请说明标准I/O函数的2个优点。它为何拥有这2个优点？
利用标准I/O函数传输数据时，下面的想法是错误的：“调用fputs函数传输数据时，调用后应立即开始发送！”为何说上述想法是错误的？为了达到这种效果应添加哪些处理过程？
对于第一个问题，标准I/O函数的优点通常包括：

可移植性：标准I/O库是设计来在多种操作系统和平台上工作的，因此使用标准I/O函数可以提高代码的可移植性。
简化编程：标准I/O提供了一组简单的函数，可以简化文件和数据流的操作，使得程序员不需要关心底层的硬件细节。
对于第二个问题，错误的想法是认为调用fputs函数后数据会立即开始发送。实际上，fputs函数只是将数据写入到输出缓冲区中，数据可能不会立即从缓冲区发送出去。为了确保数据被发送，需要执行以下处理过程：

刷新缓冲区：调用fflush函数可以清空缓冲区，确保数据被发送。
关闭文件：关闭文件时，系统会清空所有缓冲区，确保所有数据都被写入到文件或输出设备中。