如果使用=初始化一个变量， 实际上执行的是拷贝初始化， 编译器把等号
右侧的初始值拷贝到新创建的对象中去。
不使用等号， 是直接初始化。

读取未知数量的string对象
int main() {
	string w;
	while (cin>>w) {
		cout<<w<<endl;
	}
	return 0;
}
使用getline读取一整行
string line;
while (getline(cin, line)) {
    cout<<line<<endl;
}

基于范围的for语句
for (declaration : expression) {
    statement
}

C++有类模板和函数模板
编译器根据模板创建类或函数的过程称为实例化。
vector<T> a

string 和vector都支持迭代器
begin负责返回指向第一个元素
end负责指向尾元素的下一位置
iter是迭代器
*iter返回迭代器iter所指元素的引用
iter->mem 解引用iter并获取该元素名位mem的成员


泛型编程是一种编程范式，它允许编写与特定数据类型无关的通用代码。在泛型编程中，算法和数据结构被设计为与数据类型无关，从而可以在多种类型的数据上进行操作，提高了代码的重用性和灵活性。

主要特征和原则
通用性：泛型编程的目标是编写通用的代码，可以用于不同的数据类型。

参数化：泛型编程通过参数化的方式实现通用性，允许代码与数据类型进行解耦，使得代码可以适用于多种类型。

延迟绑定：在泛型编程中，数据类型的绑定是延迟的，即在编译时或运行时将特定的数据类型与通用代码进行绑定。

