主流协议是TCPIP协议族， 是一个分层 多协议的通信体系。

自底而上： 数据链路层 网路层 传输层 应用层。

数据链路层两个常用协议是 ARP协议和RARP协议， 它们实现了IP地址和MAC地址之间的转换。
ARP : IP->MAC
RARP: MAC->IP

网络层最核心的协议是IP协议。 IP协议根据数据包的目的IP地址来决定如何投递它。
另一个重要协议是ICMP协议， 因特网控制报文协议， 对IP协议的补充， 主要用于检测网络连接。
ICMP协议使用的报文格式：
0               15  16          31
8位类型 | 8位代码 |     16位校验和
 报文内容， 取决于报文的类型

8位类型字段用于区分报文类型， 它将ICMP报文分为两大类； 
	差错报文： 主要回应网络错误 目标不可达（3  重定向（5
	查询报文： 用来查询网络信息
ICMP报文使用16位校验和字段对整个报文进行循环冗余校验。

传输层协议主要三个： TCP协议， UDP协议， SCTP协议
TCP（传输控制协议）为应用层提供 可靠的、面向连接的、 基于流的服务。
	使用超时重传和数据确认来确保数据包被正确地发送到目的端。使用TCP协议通信前必须先建立TCP连接。
UDP（用户数据包协议）提供不可靠、无连接和基于数据报地服务。
上层协是如何通过使用下层协议提供的服务的呢？ 其实是通过封装实现的。
DNS端口号53 HTTTP 80

ARP工作原理： 主机向自己所在的网络广播一个ARP请求， 该请求包含目标及其的网络地址， 此网络上的其他及其都将收到这个请求， 但只有被请求的目标机器会回应一个ARP请求， 其中包含自己的物理地址。

通常， ARP维护一个高速缓存， 其中包含经常访问或最近访问的机器IP地址到物理地址的映射。 这样避免了重复的ARP请求。

数据链路层、网络层、传输层协议是在其内核种实现的。 操作系统需要实现一套系统调用， 使得应用程序能够访问协议提供的服务。 主要是socket 和 XTI

socket定义的API提供两种功能：
	将应用程序数据从用户缓冲区复制到TCP/UDP接收缓冲区中复制数据到用户缓冲区，以读取数据
	应用程序可以通过它们来修改内核中各层协议的某些头部信息或其他数据结构， 从而精细地控制底层通信的行为。

socket是一套通用网络编程接口， 不但可以访问内核中TCPIP协议栈，而且可以访问其他网络协议栈。

