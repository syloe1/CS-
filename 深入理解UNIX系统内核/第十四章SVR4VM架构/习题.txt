1. 用`read`、`write`等系统调用或者以内存文件映射方式访问文件，在语义上有哪些差异？
2. 分布式文件系统能保持`mmap`的语义么？解释NFS、RFS和DFS服务器提供的文件映射效果。
3. SVR4中的`page`结构与4.3BSD中的`cmap`结构有哪些区别？
4. 为什么`as`结构中设置了一个`hint`指针，指向最后一次发生缺页异常段？
5. 有名页与匿名对象有什么区别？
6. 为什么匿名页不需要一个持久后端存储？
7. 为什么系统里是只有一个`seg_map`段？
8. SVR4只有在进程实际创建匿名页时才分配交换页，而4.3BSD则会在创建进程时就预分配所有交换页。这两种方法各有什么优缺点？
9. 每次`mmap`都会创建一个新段么？如果会创建，那么一定是`vnode`段么？
10. 进程什么时候会共享`anon_map`？
11. 共享内存IPC结构中为什么会持有某个段的`anon_map`的引用？
12. 文件系统需要为VM子系统提供哪些支持？
13. 为什么SVR4不使用块缓冲区缓存存储文件数据页？
14. 为什么SVR4和Solaris都在创建段时预留交换空间？
15. SVR4在什么情况下会预加载页面？这种工作方式有哪些优缺点？
16. 什么是惰性求值？SVR4在什么时候使用这种方法？
17. 写时复制技术有哪些优缺点？