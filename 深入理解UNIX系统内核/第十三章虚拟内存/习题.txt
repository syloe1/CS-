1. 在13.2.1节中列出的目标中，如果系统只用交换作为唯一的内存管理机制，能够满足哪个目标？
2. 相对于分段机制，按需分页机制有哪些优点？
3. 为什么UNIX系统会把一些页面预先加载上来？这么做有什么缺点？
4. 将代码区的数据也复制到交换区有什么优点和缺点？
5. 假定可执行程序保存在远程主机上，如果在执行前先将整个执行镜像复制到本机交换区上是不是更好？
6. 虚拟地址转换是由操作系统和硬件配合完成的，这两部分职责是如何划分的？在13.3节中描述的三种不同体系架构下，职责划分有什么变化？
7. 与局部页面替换策略相比，全局页面替换策略有什么优缺点？
8. 程序员可以采用哪些步骤最小化一个应用程序的工作集？
9. 反转页表有哪些优点？
10. MIPS3000架构下会触发大量的“假”缺页异常？其架构中的哪些优点可以弥补处理这些错误的开销？
11. 假定一个4.3BSD进程同时因为“非驻留页访问”和保护错误（不允许进行期望的访问）导致一次页面错误，那么缺页异常处理例程应该先检查哪种原因呢？具体又应该怎么做呢？
12. 为什么核心映射只管理在分页池中的页面？
13. 页面的名字有什么含义？一个页面只能对应一个名字么？在4.3BSD上有哪些不同的命名空间？
14. 一个4.3BSD系统至少需要多少交换空间？使用一个巨大交换空间又有什么优点？
15. 有哪些因素会限制进程虚拟地址空间大小？并且，为什么进程需要尽量更有效地使用其虚拟地址空间？
16. 将交换空间散布在多个物理磁盘会不会更好？为什么呢？
17. 为什么严格LRU策略不适合作页面替换？
18. 早期的BSD发行版[Baba81，Left89]使用一种单针时钟（one-handed clock）算法，第一趟扫描时将引用位清零，第二趟扫描时将引用位仍然为零的页面交换出去。为什么这种算法不如双针时钟算法（two-handed clock）呢？
